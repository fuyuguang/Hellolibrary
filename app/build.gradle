import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: "findbugs"

android {




    compileSdkVersion 24
    buildToolsVersion "25.0.1"


    def apkFile = ""
    delete rootProject.buildDir







    /**
     * 获取build时间
     */
    def df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss")
    df.setTimeZone(TimeZone.getDefault())
    def buildTime = df.format(new Date())

    defaultConfig {
        multiDexEnabled true
        applicationId "com.jiuxianapk.ui"
        minSdkVersion 14
        targetSdkVersion 21
        manifestPlaceholders = [BUILD_TIME_VALUE: buildTime]

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }



    /**
     * 获取channel,versionName,versionCode
     */
    def channel = 'jiuxianwebsite'
    def versionN = null
    def versionC = null
    def channelInfoFile = file('./../buildConfig/app.properties')
    if (channelInfoFile.canRead()) {
        def Properties channelProps = new Properties()
        FileInputStream input = new FileInputStream(channelInfoFile)
        channelProps.load(input)
        input.close()
        channel = channelProps['app.channel']
        versionN = channelProps['app.version.name']
        versionC = channelProps['app.version.code'].toInteger()
    }



    /**
     * 设置version
     */
    defaultConfig {
        versionName versionN
        versionCode versionC

    }

    /**
     * 修改build文件
     */
    def buildInfoFile = file('./../buildConfig/build_info.properties')
    if (buildInfoFile.canRead()) {
        def Properties buildInfoProps = new Properties()
        FileInputStream input = new FileInputStream(buildInfoFile)
        buildInfoProps.load(input)
        input.close()

        buildInfoProps['versionName'] = "${defaultConfig.versionName}".toString()
        buildInfoProps['buildTime'] = buildTime
        buildInfoProps['apkFileName'] = "jiuxian_${defaultConfig.versionName}/channels/jiuxian_${defaultConfig.versionName}_".toString() + channel + ".apk"

        //获取apk 输出路径
        def fileName = "jiuxian_${defaultConfig.versionName}_" + channel + ".apk"
        apkFile = new File(rootProject.buildDir.path + "/apk/jiuxian_${defaultConfig.versionName}", fileName).toString()

        buildInfoProps['apkFile'] = apkFile;


        def writer = buildInfoFile.newWriter()
        buildInfoProps.store(writer, null)
        writer.close()
    }






    signingConfigs {
        config {
            keyAlias 'fyg'
            keyPassword '111111'
            storeFile file('test')
            storePassword '111111'
        }
    }



    defaultConfig {
        applicationId "com.jiayou.fyg.hellolibrary"
        minSdkVersion 14
        targetSdkVersion 24
    }



    buildTypes {
        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "jiuxian_${defaultConfig.versionName}_" + channel + ".apk"
                        output.outputFile = new File(rootProject.buildDir.path + "/apk/jiuxian_${defaultConfig.versionName}", fileName)
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "jiuxian_${defaultConfig.versionName}_" + channel + ".apk"
                        output.outputFile = new File(rootProject.buildDir.path + "/apk/jiuxian_${defaultConfig.versionName}", fileName)
                    }
                }
            }
        }
    }





    task findbugs(type: FindBugs) {
        //toolVersion = "2.0.1"
        ignoreFailures = true
        effort = "max"
        reportLevel = "low"
        //过滤器
        excludeFilter = new File("${project.rootDir}/findbug_filter.xml")
        classes = files("$project.buildDir/intermediates/classes")
        source = fileTree('src/main/java')
        classpath = files()
        reports {

            reports {
                //只能开启一个
                xml.enabled = true
                html.enabled = false
            }
        }
    }




}




dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.github.fuyuguang:Hellolibrary:v3.0'
    compile 'cn.trinea.android.common:trinea-android-common:4.2.15'

}
